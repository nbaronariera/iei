// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UI.Entidades;

#nullable disable

namespace UI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251022205327_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("UI.Entidades.Estacion", b =>
                {
                    b.Property<int>("cod_estacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("codigoLocalidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("codigoPostal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("contacto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("horario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("latitud")
                        .HasColumnType("REAL");

                    b.Property<double>("longitud")
                        .HasColumnType("REAL");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("cod_estacion");

                    b.HasIndex("codigoLocalidad");

                    b.ToTable("Estacion", (string)null);
                });

            modelBuilder.Entity("UI.Entidades.Localidad", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("codigoProvincia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("codigo");

                    b.HasIndex("codigoProvincia");

                    b.ToTable("Localidad", (string)null);
                });

            modelBuilder.Entity("UI.Entidades.Provincia", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("codigo");

                    b.ToTable("Provincia", (string)null);
                });

            modelBuilder.Entity("UI.Entidades.Estacion", b =>
                {
                    b.HasOne("UI.Entidades.Localidad", "localidad")
                        .WithMany("Estaciones")
                        .HasForeignKey("codigoLocalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("localidad");
                });

            modelBuilder.Entity("UI.Entidades.Localidad", b =>
                {
                    b.HasOne("UI.Entidades.Provincia", "Provincia")
                        .WithMany("Localidades")
                        .HasForeignKey("codigoProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("UI.Entidades.Localidad", b =>
                {
                    b.Navigation("Estaciones");
                });

            modelBuilder.Entity("UI.Entidades.Provincia", b =>
                {
                    b.Navigation("Localidades");
                });
#pragma warning restore 612, 618
        }
    }
}
